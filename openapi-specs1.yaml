openapi: 3.0.3 
info:
  title: Workflow Managemant Specification
  version: 1.0.0
  description: Workflow Managemant API specification

servers:
  - url: '{protocol}://{ip}:{port}/{base-api}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      ip:
        enum:
          - localhost
          - 34.199.12.114
        default: localhost
      port:
        enum:
          - '9000'
          - '5057'
        default: '9000'
      base-api:
        enum:
          - api
        default: api
tags: 
  - name: Project
    description: perform CRUD operations on Project Table
  - name: Stage
    description: perform CRUD operations on Stage Table

paths:
  /project:
    get:
      tags: 
        - Project
      summary: Get all projects
      operationId: getProjectList
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDTO'
        '404':
          description: "Service Not found"
        '500':
          description: "Internal Server Error"
    post:
      tags:
        - Project
      summary: Create a new project
      operationId: addProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDTO'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDTO'
        '404':
          description: "Service Not found"
        '500':
          description: "Internal Server Error"
  /project/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - Project
      summary: Get details of a specific project
      operationId: getProject
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    put:
      tags:
        - Project
      summary: Update project details of given id
      operationId: updateProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    delete:
      tags: 
        - Project
      summary: Delete a project of given id
      operationId: deleteProject
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /project/{id}/usecases:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - Project
      summary: Get all use cases for a project
      operationId: getProjectUsecases
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsecaseDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  
  /usecase/{usecaseId}/stages:
    parameters:
      - in: path
        name: usecaseId
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags: 
        - Stage
      summary: Get all stages for a use case
      operationId: getUsecaseStages
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StageDTO'
        '404':
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /usecase/{usecaseId}/stage:
    parameters:
      - in: path
        name: usecaseId
        schema:
          type: integer
          format: int64
        required: true
    post:
      tags:
        - Stage
      summary: Add  Stages
      operationId: addStages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StageDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageDTO'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageDTO'
        '404':
          description: "Service Not found"
        '500':
          description: "Internal Server Error"
  /usecase/{usecaseId}/stage/{id}:
    parameters:
      - in: path
        name: usecaseId
        schema:
          type: integer
          format: int64
        required: true
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags:
        - Stage
      summary: Fetch an Stage of given id
      operationId: getStage
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    put:
      tags:
        - Stage
      summary: Update Stage
      operationId: updateStage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StageDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageDTO'
        201:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
    delete:
      tags:
        - Stage
      summary: Delete a Stage
      operationId: deleteStage
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageDTO'
        404:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
          
  /usecase/{usecaseId}stage/{id}/sub-stages:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
          format: int64
        required: true
      - in: path
        name: usecaseId
        schema:
          type: integer
          format: int64
        required: true
    get:
      tags: 
        - Stage
      summary: Get all subsatgesstages for a use case
      operationId: getStageSubStages
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubStageDTO'
        '404':
          description: "Service Not found"
        500:
          description: "Internal Server Error"
 

components:
  schemas:
    ProjectDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        department:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        budget:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        status:
          type: string
    
    UsecaseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        status:
          type: string
        resourceId:
           type: integer
           format: int64
        projectId:
           type: integer
           format: int64
    StageDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description: 
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        status:
          type: string  
        resourceId:
           type: integer
           format: int64  
        usecaseId:
          type: integer
          format: int64
    SubStageDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        comments: 
          type: string
        startDate:
          type: string
        endDate:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdOn:
          type: string
        updatedOn:
          type: string
        status:
          type: string  
        stageId:
          type: integer
          format: int64
        resourceId:
           type: integer
           format: int64    
    

          
    
      
          

        
        
        